package com.github.bennidi.scalatrest.api.core

import org.scalatra.swagger.{SwaggerOperation, SwaggerSupport}

/**
 * This trait encapsulates dependencies to Scalatra SwaggerSupport.
 * It redefines methods used to create documentation artifacts in order to increase readability.
 */
trait ApiDocumentationSupport extends SwaggerSupport with SwaggerIntegration{
  self: ResourceInfoProvider =>

  override protected def applicationDescription: String = resourceInfo.description

  // Sugar for writing swagger docs
  def apidoc(op:SwaggerOperation)={
    operation(op)
  }

}

import com.github.bennidi.scalatrest.core.di.{DIModules, InjectionSupport}
import org.scalatra.swagger._
import org.scalatra.{CorsSupport, ScalatraServlet}

/**
 * The REST endpoint for the auto-generated Swagger documentation.
 * It provides access to Swagger.Spec conforming JSON files describing the available API endpoints.
 * The Swagger.Spec is auto-generated by inspection of scala case classes enriched with documentation
 * written in method calls
 *
 * Generated Api documentation is exposed in the path configured in this companion object.
 * To switch into companion object documentation click on the icon in the upper left corner.
 *
 * === Read more ===
 * [[http://www.scalatra.org/2.4/guides/swagger.html Scalatra Swagger Guide]]
 * [[https://github.com/swagger-api/swagger-core Swagger Core]]
 * [[https://github.com/swagger-api/swagger-scala-module Swagger Scala Module]]
 * [[https://github.com/swagger-api/swagger-ui Swagger-UI]]
 *
 */
class SwaggerApiDocProvider extends ScalatraServlet
                                    with JacksonSwaggerBase
                                    with DIModules
                                    with SwaggerIntegration
                                    with CorsSupport{
  options("/"){
    response.setHeader("Access-Control-Allow-Headers", request.getHeader("Access-Control-Request-Headers"))
  }

}

object SwaggerApiDocProvider{

  /**
   * The basepath under which all api documentation of all resources is exposed
   */
  val EndpointUrl:String = "/api-docs"
}

/**
 * (Re-)Expose required SwaggerEngine as implicit to  all REST-Resources. This enables
 * automatic discovery of API routes and generation of respective dependency
 */
trait SwaggerIntegration extends InjectionSupport{

  protected implicit def swagger: SwaggerEngine[Api] = inject[Swagger]

}
